services:
  dms_2025:
    image: dms_2025
    build:
      context: .
      dockerfile: DMS_2025/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__Default=Host=${POSTGRES_HOST:-postgres};Port=${POSTGRES_PORT:-5432};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - postgres

  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 5s
        timeout: 5s
        retries: 10

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.18
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    networks:
      - postgres
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./nginx:/etc/nginx/conf.d:ro
      #- ./DMS_2025.UI/wwwroot/src:/usr/share/nginx/html:ro
      - ./DMS_2025.UI/wwwroot:/usr/share/nginx/html:ro
    depends_on:
      paperless:
        condition: service_started
    networks:
      - postgres

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    ports:
      - "8000:8000"
    environment:
      PAPERLESS_SECRET_KEY: example123
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_DBNAME: paperless
      PAPERLESS_DBUSER: paperless
      PAPERLESS_DBPASS: paperlesspw
      PAPERLESS_REDIS: redis://redis:6379
      REDIS_URL: redis://redis:6379 
      PAPERLESS_BIND_ADDR: 0.0.0.0
      PAPERLESS_PORT: 8000
    depends_on:
      paperless-db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - postgres
    restart: unless-stopped

  paperless-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperlesspw
    volumes:
      - paperless-db:/var/lib/postgresql/data
    networks:
      - postgres
    restart: unless-stopped

  redis:
    image: redis:alpine
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  paperless-db:
